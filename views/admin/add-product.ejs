<%- include('../partials/admin-header.ejs') %>

    <section class="content-main">
        <div class="content-header">
            <div>
                <h2 class="content-title card-title">Add Product</h2>
            </div>
            <div>
                <a href="/admin/products/" class="btn btn-outline-dark">Go Back</a>
            </div>
        </div>
        <div class="content-wrapper">
            <div class="container-fluid">
        
                <div class="row ">
                    <div class="col-lg-6">
                        <div class="card" style="margin-top: 20px; margin-left: 60px;">
                            <div class="card-body">
                                <div class="card-title">Add Product Details</div>
                                <hr>
                                <form id="addProductForm" method="post" enctype="multipart/form-data">
                                    <div class="form-group mt-3">
                                        <label for="input-1">Product Name</label>
                                        <input type="text" name="name" class="form-control" id="input-1">
                                        <p id="nameErrorMessages" class="text-danger"></p>
                                    </div>
        
                                    <div class="form-group mt-3">
                                        <label for="input-2">Brand Name</label>
                                        <input type="text" name="brand" class="form-control" id="input-2">
                                        <p id="brandErrorMessages" class="text-danger"></p>
                                    </div>
        
                                    <div class="form-group mt-3">
                                        <label for="input-3">Price</label>
                                        <input type="number" name="price" class="form-control" id="input-3">
                                        <p id="priceErrorMessages" class="text-danger"></p>
                                    </div>
        
                                    <div class="form-group mt-3">
                                        <label for="input-4">Quantity</label>
                                        <input type="number" name="quantity" class="form-control" id="input-4">
                                        <p id="quantityErrorMessages" class="text-danger"></p>
                                    </div>
        
                                    <div class="form-group mt-3">
                                        <label for="input-5">Description</label>
                                        <input type="text" name="description" class="form-control" id="input-5">
                                        <p id="descriptionErrorMessages" class="text-danger"></p>
                                    </div>
        
                                    <div class="form-floating mt-3">
                                        <select name="category" style="background-color:rgb(58,133,169);"
                                            class="form-select" id="floatingSelect"
                                            aria-label="Floating label select example">
                                            <% if(categories.length> 0) {
                                                for(let i=0; i < categories.length; i++) { %>
                                                    <option value="<%= categories[i].name %>"
                                                        style="background-color:rgb(58,133,169);">
                                                        <%= categories[i].name %>
                                                    </option>
                                                    <% } } %>
                                        </select>
                                        <label for="floatingSelect">Select Category</label>
                                        <p id="categoryErrorMessages" class="text-danger"></p>
                                    </div>

                                    <div class="form-group mt-3">
                                        <label for="offer">Offer</label>
                                        <input type="number" name="offer" class="form-control" id="offer">
                                        <p id="offerErrorMessages" class="text-danger"></p>
                                    </div>
        
        
                                    <div id="preview"></div>
                                    <div class="form-group mt-3">
                                        <label for="input-7">Image</label>
                                        <input type="file" multiple name="image" class="form-control" id="input-7">
                                        <p id="imageErrorMessages" class="text-danger"></p>
                                    </div>
        
                                    <div class="form-group mt-3">
                                        <button type="submit" class="btn btn-primary px-5"><i class="icon-lock"></i> ADD</button>
                                        <button type="submit" class="btn  mr-2"><a class="btn btn-outline-danger " href="/admin/products/">Cancel</a></button>
                                    </div>
                                </form>
                                <% if(typeof message !=='undefined' ){ %>
                                    <h6><br>
                                        <%= message %>
                                    </h6>
                                <% } %>
                            </div>
                        </div>
                    </div>
        
                </div>
        </div>
    </section> <!-- content-main end// -->  

    <script>
        document.getElementById('addProductForm').addEventListener('submit', function (event) {
            // Prevent the form from submitting by default
            event.preventDefault();
    
            // Reset error messages and borders
            resetErrorMessages();
    
            // Perform validation
            if (validateForm()) {
                // If validation passes, submit the form
                this.submit();
            }
        });
    
        function resetErrorMessages() {
            // Reset error messages to clear any previous validation errors
            const errorFields = document.querySelectorAll('.form-control');
            errorFields.forEach(function (field) {
                field.classList.remove('border', 'border-danger');
            });
    
            document.getElementById('nameErrorMessages').innerText = '';
            document.getElementById('brandErrorMessages').innerText = '';
            document.getElementById('priceErrorMessages').innerText = '';
            document.getElementById('quantityErrorMessages').innerText = '';
            document.getElementById('descriptionErrorMessages').innerText = '';
            document.getElementById('categoryErrorMessages').innerText = '';
            document.getElementById('imageErrorMessages').innerText = '';
            document.getElementById('offerErrorMessages').innerText = '';
        }
    
        function validateForm() {
            // Flag to track if validation passes or fails
            let isValid = true;
    
            // Validate Product Name
            const productName = document.getElementById('input-1').value.trim();
            if (!productName) {
                document.getElementById('nameErrorMessages').innerText = 'Product Name is required';
                document.getElementById('input-1').classList.add('border', 'border-danger');
                isValid = false;
            }
    
            // Validate Brand Name
            const brandName = document.getElementById('input-2').value.trim();
            if (!brandName) {
                document.getElementById('brandErrorMessages').innerText = 'Brand Name is required';
                document.getElementById('input-2').classList.add('border', 'border-danger');
                isValid = false;
            }
    
            // Validate Price
            const price = document.getElementById('input-3').value.trim();
            if (!price || isNaN(price) || parseFloat(price) <= 0) {
                document.getElementById('priceErrorMessages').innerText = 'Please enter a valid Price';
                document.getElementById('input-3').classList.add('border', 'border-danger');
                isValid = false;
            }
    
            // Validate Quantity
            const quantity = document.getElementById('input-4').value.trim();
            if (!quantity || isNaN(quantity) || parseInt(quantity) <= 0) {
                document.getElementById('quantityErrorMessages').innerText = 'Please enter a valid Quantity';
                document.getElementById('input-4').classList.add('border', 'border-danger');
                isValid = false;
            }
    
            // Validate Description
            const description = document.getElementById('input-5').value.trim();
            if (!description) {
                document.getElementById('descriptionErrorMessages').innerText = 'Description is required';
                document.getElementById('input-5').classList.add('border', 'border-danger');
                isValid = false;
            }

            // Validate Offer
            const offer = document.getElementById('offer').value.trim();
            if (isNaN(offer) || parseInt(offer) < 0) {
                document.getElementById('offerErrorMessages').innerText = 'Please enter a valid Offer';
                document.getElementById('offer').classList.add('border', 'border-danger');
                isValid = false;
            }
    
            // Validate Category
            const category = document.getElementById('floatingSelect').value.trim();
            if (!category) {
                document.getElementById('categoryErrorMessages').innerText = 'Please select a Category';
                document.getElementById('floatingSelect').classList.add('border', 'border-danger');
                isValid = false;
            }
    
            // Validate Image
            const image = document.getElementById('input-7').value.trim();
            if (!image) {
                document.getElementById('imageErrorMessages').innerText = 'Image is required';
                document.getElementById('input-7').classList.add('border', 'border-danger');
                isValid = false;
            }
    
            return isValid;
        }
    </script>
 
<%- include('../partials/admin-footer.ejs') %>