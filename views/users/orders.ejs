<%- include('../partials/user-header.ejs') %>

    <section class="content-main">

        <% if (orders.length === 0) { %>
            <div class="mt-30 mb-30 ml-50">
                <h1>No Orders</h1>
            </div>

            <div class="mt-30 mb-30 ml-50">
                <a href="/shop" class="btn btn-main"><i class="fi-rs-shopping-bag mr-10"></i>Go Shopping</a>
            </div>
        <% } else { %>
            <div class="content-header mt-30 mb-30 ml-50">
                <div>
                    <h2 class="content-title card-title">Your Orders</h2>
                </div>
                
            </div>
            <div class="container pt-5">
            
                <div class="table-responsive ">
                        <table id="example" class="table table-striped " style="width:100%">
                            <thead>
                                <tr>
                                    
                                    <th>Order ID</th>
                                    <th>Ordered Date</th>
                                    <th class="text-center">Items</th>
                                    <th>Total Price</th>
                                    <th>Payment</th>
                                    <th>Status</th>
                                    <th>Delivery Status</th>
                                    <th class="actions-column">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% for ( let order of orders ){ %>

                                    <% var timeDiff = now - order.orderedDate  %>
                                    <% var days = timeDiff / ( 1000 * 60 * 60 * 24 ) %>

                                    <tr>
                                        
                                        <td><%= order._id %></td>
                                        <td><%= order.orderedDate.toDateString() %></td>
                                        <td class="text-center"><%= order.items.length %></td>
                                        <td>â‚¹ <%= order.totalPrice.toFixed(2) %></td>
                                        <td><%= order.paymentMethod %></td>
                                        <td id="order-status-<%= order._id %>"><%= order.orderStatus %></td>
                                        <td><%= order.deliveryStatus %></td>
                                        <td>
                                            <div class="btn-container text-center">

                                                <% if ((order.deliveryStatus === 'Pending' || order.deliveryStatus === 'Shipped')&&(order.orderStatus !== 'Cancelled')) { %>
                                            
                                                    <button style="font-size: 14px;" id="cancel-<%= order._id %>" onclick="cancelOrder('<%= order._id %>')" class="btn btn-danger">Cancel</button>
                                            
                                                <% } else if ((order.deliveryStatus === 'Delivered')&&(order.orderStatus !== 'Returned')&&(order.orderStatus !== 'Return Pending')&& (days < 30)) { %>
                                                    <button style="font-size: 14px;" id="return-<%= order._id %>" onclick="returnOrder('<%= order._id %>')" class="btn btn-danger">Return</button>
                                                <% } %>
                                            
                                                <a style="font-size: 14px;" class="btn btn-dark" href="/view-order-products/<%= order._id %>">View Details</a>

                                            </div>
                                            
                                        </td>                                       
                                    </tr>

                                <% } %>
                                
                            </tbody>
                            
                        </table>
                        <br><br>
                </div>

                <br><br><br>
            
            </div>

        <% } %>
        

    </section>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        async function cancelOrder(orderId){
            try {

                const cancellationReason = await promptCancellationReason();
                if (!cancellationReason) return;

                const shouldCancel = await showConfirmationDialog("Are you sure you want to cancel this order?");
                if (!shouldCancel) return;

                const status = 'Cancelled';
                const cancel = await axios.patch('/cancel-order',{orderId,status,cancellationReason});
                if (cancel.data.success){
                    const cancelButton = document.getElementById(`cancel-${orderId}`);
                    const order_status = document.getElementById(`order-status-${orderId}`);
                    cancelButton.style.display = 'none';
                    order_status.innerHTML = cancel.data.status;
                }
            } catch (error) {
                console.log(error.message);
            }
        }

        async function returnOrder ( orderId ) {

            const returnReason = await promptReturnReason();
            if (!returnReason) return;

            const shouldReturn = await showConfirmationDialog("Are you sure you want to return this order?");
            if (!shouldReturn) return;

            const status = 'Return Pending';
            const response = await axios.patch( '/return-order',{
                orderId,status,returnReason
            });
            if (response.data.success) {
                const returnButton = document.getElementById(`return-${orderId}`);
                const order_status = document.getElementById(`order-status-${orderId}`);
                returnButton.style.display = 'none';
                order_status.innerHTML = response.data.status;

            } 
        }

        async function showConfirmationDialog(message) {
            const result = await Swal.fire({
                title: 'Confirmation',
                text: message,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes',
                cancelButtonText: 'No'
            });

            return result.isConfirmed;
        }

        async function promptCancellationReason() {
            const { value: reason } = await Swal.fire({
                title: 'Enter Cancellation Reason',
                input: 'text',
                inputPlaceholder: 'Provide a reason for cancellation...',
                showCancelButton: true,
                confirmButtonText: 'Submit',
                cancelButtonText: 'Cancel',
            });

            return reason;
        }

        async function promptReturnReason() {
            const { value: reason } = await Swal.fire({
                title: 'Enter Return Reason',
                input: 'text',
                inputPlaceholder: 'Provide a reason for return...',
                showCancelButton: true,
                confirmButtonText: 'Submit',
                cancelButtonText: 'Cancel',
            });

            return reason;
        }

    </script>

<%- include('../partials/user-footer.ejs') %>