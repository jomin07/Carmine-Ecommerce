<%- include('../partials/user-header.ejs') %>

  <div class="container d-flex justify-content-center align-items-center h-100vh mt-50 mb-200">

    <div class="col-lg-5 mx-auto">

      <div class="col-lg-5 " style="width: 500px;">
        <div class="login_wrap widget-taber-content p-30 background-white border-radius-10 mb-md-5 mb-lg-0 mb-sm-5">
            <div class="padding_eight_all bg-white">
                <div class="text-center mb-30">
                  <h2>CARMINE</h2>
                </div>
                <div class="heading_s1 text-center">
                    <h3 class="mt-50 mb-30">Sign Up</h3>
                </div>
                <form id="registrationForm" method="post" novalidate>

                    <div class="form-group">
                      <label class="form-label" for="name">Name</label>
                      <input type="text" name="name" class="form-control form-control-lg" value="<%= typeof formData !== 'undefined' ? formData.name : '' %>" >
                      <p id="nameErrorMessages" class="text-danger"></p>
                    </div>

                    <div class="form-group">
                      <label class="form-label" for="email">Email</label>
                      <input type="email" name="email" class="form-control form-control-lg" value="<%= typeof formData !== 'undefined' ? formData.email : '' %>" >
                      <p id="emailErrorMessages" class="text-danger"></p>
                    </div>

                    <div class="form-group">
                      <label class="form-label" for="password">Password</label>
                      <input type="password" name="password" class="form-control form-control-lg" value="<%= typeof formData !== 'undefined' ? formData.password : '' %>" >
                      <p id="passwordErrorMessages" class="text-danger"></p>
                    </div>

                    <div class="form-group">
                      <label class="form-label" for="mno">Mobile</label>
                      <input type="text" name="mno" class="form-control form-control-lg" value="<%= typeof formData !== 'undefined' ? formData.mno : '' %>">
                      <p id="mobileErrorMessages" class="text-danger"></p>
                    </div>

                    <div class="form-group">
                      <label class="form-label" for="referral">Referral Code</label>
                      <input type="text" name="referral" class="form-control form-control-lg">
                    </div>

                    
                    
                    <% if(typeof message !== 'undefined'){%>
                    
                      <h6 class="text-danger"><br>
                        <%= message %>
                      </h6>
                    
                    <%} %>
                    <p id="errorMessages" class="text-danger"></p>
                    <div class="form-group mt-30">
                        <input type="submit"  value="Register" class=" btn btn-main btn-fill-out btn-block hover-up">
                    </div>

                    <div class="text-center">
                      <span class="text-muted">Already have an Acoount? </span><a href="/login" class="text-dark"> Login</a>
                    </div>
                </form>
            </div>
        </div>
      </div>

    </div>

  </div>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const registrationForm = document.getElementById("registrationForm");
  
      registrationForm.addEventListener("submit", function (event) {
        // Clear previous error messages and remove border-danger class
        clearErrorMessages();
  
        // Validate each form field
        const name = registrationForm.elements["name"];
        const email = registrationForm.elements["email"];
        const password = registrationForm.elements["password"];
        const mobile = registrationForm.elements["mno"];
  
        let formIsValid = true;
  
        // Name validation
        if (name.value.trim() === "") {
          displayErrorMessage("nameErrorMessages", "Please enter your name");
          addErrorClass(name);
          formIsValid = false;
        }
  
        // Email validation
        if (email.value.trim() === "") {
          displayErrorMessage("emailErrorMessages", "Please enter your email");
          addErrorClass(email);
          formIsValid = false;
        } else if (!isValidEmail(email.value.trim())) {
          displayErrorMessage("emailErrorMessages", "Please enter a valid email address");
          addErrorClass(email);
          formIsValid = false;
        }
  
        // Password validation
        if (password.value.trim() === "") {
          displayErrorMessage("passwordErrorMessages", "Please enter your password");
          addErrorClass(password);
          formIsValid = false;
        } else if (password.value.trim().length < 6) {
          displayErrorMessage("passwordErrorMessages", "Password must contain at least 6 characters");
          addErrorClass(password);
          formIsValid = false;
        }
  
        // Mobile validation
        if (mobile.value.trim() === "") {
          displayErrorMessage("mobileErrorMessages", "Please enter your mobile number");
          addErrorClass(mobile);
          formIsValid = false;
        } else if (!isValidMobileNumber(mobile.value.trim())) {
          displayErrorMessage("mobileErrorMessages", "Mobile number must have exactly 10 digits");
          addErrorClass(mobile);
          formIsValid = false;
        }
  
        // If form is not valid, prevent submission
        if (!formIsValid) {
          event.preventDefault();
        }
      });
  
      function displayErrorMessage(elementId, message) {
        const errorMessageElement = document.getElementById(elementId);
        errorMessageElement.textContent = message;
      }
  
      function clearErrorMessages() {
        const errorMessages = document.querySelectorAll(".text-danger");
        errorMessages.forEach((element) => (element.textContent = ""));
  
        // Remove border-danger class
        const inputFields = registrationForm.querySelectorAll(".form-control");
        inputFields.forEach((field) => removeErrorClass(field));
      }
  
      function addErrorClass(field) {
        field.classList.add("border-danger");
      }
  
      function removeErrorClass(field) {
        field.classList.remove("border-danger");
      }
  
      function isValidEmail(email) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return emailRegex.test(email);
      }
  
      function isValidMobileNumber(mobile) {
        return /^\d{10}$/.test(mobile);
      }
    });
  </script>
  
  
  
  


<%- include('../partials/user-footer.ejs') %>

  <!-- <script>
    document.getElementById('registrationForm').addEventListener('submit', function (event) {
      const name = document.getElementsByName('name')[0].value;
      const email = document.getElementsByName('email')[0].value;
      const password = document.getElementsByName('password')[0].value;
      const mobile = document.getElementsByName('mno')[0].value;
      const errorMessages = document.getElementById('errorMessages');   
  
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      const isEmailValid = emailRegex.test(email);
  
      errorMessages.innerHTML = '';
  
      if (name.length < 1) {
        errorMessages.innerHTML += 'Name should have at least 1 character.<br>';
      }
      if (!isEmailValid) {
        errorMessages.innerHTML += 'Please enter a valid email.<br>';
      }
      if (password.length < 6) {
        errorMessages.innerHTML += 'Password should contain at least 6 characters.<br>';
      }
      if (mobile.length !== 10) {
        errorMessages.innerHTML += 'Mobile number should have 10 digits.<br>';
      }
  
      if (errorMessages.innerHTML !== '') {
        event.preventDefault();
      }
    });
  </script> -->